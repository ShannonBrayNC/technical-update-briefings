diff --git a/tab-filmstrip/package.json b/tab-filmstrip/package.json
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/package.json
@@ -0,0 +29 @@
+{
+  "name": "tab-filmstrip",
+  "private": true,
+  "version": "0.0.1",
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "vite build",
+    "preview": "vite preview",
+    "test": "vitest"
+  },
+  "dependencies": {
+    "@microsoft/teams-js": "^2.18.0",
+    "framer-motion": "^10.18.0",
+    "lucide-react": "^0.452.0",
+    "react": "^18.2.0",
+    "react-dom": "^18.2.0"
+  },
+  "devDependencies": {
+    "@types/node": "^20.11.30",
+    "@types/react": "^18.2.43",
+    "@types/react-dom": "^18.2.17",
+    "@vitejs/plugin-react": "^4.2.0",
+    "typescript": "^5.5.4",
+    "vite": "^5.0.12",
+    "vitest": "^1.5.0",
+    "jsdom": "^24.0.0"
+  }
+}

diff --git a/tab-filmstrip/vite.config.ts b/tab-filmstrip/vite.config.ts
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/vite.config.ts
@@ -0,0 +10 @@
+
+import { defineConfig } from "vite";
+import react from "@vitejs/plugin-react";
+import path from "path";
+export default defineConfig({
+  plugins: [react()],
+  resolve: { alias: { "@": path.resolve(__dirname, "src") } },
+  test: { environment: "jsdom", globals: true },
+  server: { port: 5173, strictPort: true }
+});

diff --git a/tab-filmstrip/tsconfig.json b/tab-filmstrip/tsconfig.json
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/tsconfig.json
@@ -0,0 +28 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": [
+      "ES2020",
+      "DOM",
+      "DOM.Iterable"
+    ],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "jsx": "react-jsx",
+    "strict": true,
+    "baseUrl": ".",
+    "paths": {
+      "@/*": [
+        "src/*"
+      ]
+    }
+  },
+  "include": [
+    "src"
+  ]
+}

diff --git a/tab-filmstrip/index.html b/tab-filmstrip/index.html
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/index.html
@@ -0,0 +13 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Tech Update – Tab Filmstrip</title>
+    <script src="https://cdn.tailwindcss.com"></script>
+  </head>
+  <body class="bg-zinc-50">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+</html>

diff --git a/tab-filmstrip/README_PR.md b/tab-filmstrip/README_PR.md
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/README_PR.md
@@ -0,0 +39 @@
+# PR: Tab Filmstrip (Teams Tab / Web Preview)
+
+This adds a self-contained Vite app under `tab-filmstrip/` so you can smoke-test the **DeckPreview – Filmstrip** UI
+without touching the main app. It also includes a ready `git-apply.diff` that adds this folder in one command.
+
+## Quick run
+
+```bash
+cd tab-filmstrip
+npm i
+npm run dev
+```
+
+Sources are served from `public/tools/...`. Replace those files with your exported HTML.
+
+## Use in your main app
+
+1) Copy `src/components/DeckPreviewOptionB.tsx` into your app (or import from this folder).
+2) Use it:
+
+```tsx
+import DeckPreviewOptionB, { DeckPreviewFromSources } from "tab-filmstrip/src/components/DeckPreviewOptionB";
+<DeckPreviewFromSources defaultView="filmstrip" />
+```
+
+3) Ensure your app serves:
+- `/tools/roadmap/RoadmapPrimarySource.html`
+- `/tools/message_center/MessageCenterBriefingSuppliments.html`
+- optional `/deck-images/*`
+
+## Apply as a patch
+
+```bash
+git checkout -b feat/tab-filmstrip
+git apply tab-filmstrip/git-apply.diff
+git add -A
+git commit -m "feat(tab): add filmstrip preview app + component"
+git push -u origin feat/tab-filmstrip
+```

diff --git a/tab-filmstrip/src/main.tsx b/tab-filmstrip/src/main.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/main.tsx
@@ -0,0 +6 @@
+import React from "react";
+import ReactDOM from "react-dom/client";
+import TabFilmstripPreview from "./pages/TabFilmstripPreview";
+ReactDOM.createRoot(document.getElementById("root")!).render(
+  <React.StrictMode><TabFilmstripPreview /></React.StrictMode>
+);

diff --git a/tab-filmstrip/src/pages/TabFilmstripPreview.tsx b/tab-filmstrip/src/pages/TabFilmstripPreview.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/pages/TabFilmstripPreview.tsx
@@ -0,0 +15 @@
+import React from "react";
+import DeckPreviewOptionB, { DeckPreviewFromSources } from "../components/DeckPreviewOptionB";
+export default function TabFilmstripPreview() {
+  return (
+    <div className="min-h-screen p-6">
+      <h1 className="text-2xl font-semibold mb-4">Deck Preview – Filmstrip (PR App)</h1>
+      <div className="border rounded-xl bg-white shadow-sm">
+        <DeckPreviewFromSources defaultView="filmstrip" />
+      </div>
+      <p className="text-sm text-zinc-600 mt-4">
+        Replace the HTML under <code>public/tools/…</code> with your exports from the repo to smoke-test quickly.
+      </p>
+    </div>
+  );
+}

diff --git a/tab-filmstrip/src/components/DeckPreviewOptionB.tsx b/tab-filmstrip/src/components/DeckPreviewOptionB.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/DeckPreviewOptionB.tsx
@@ -0,0 +2 @@
+import * as React from "react";
+export default function ReplaceMe() { return <div className="p-6">Paste your canvas DeckPreviewOptionB.tsx here.</div>; }

diff --git a/tab-filmstrip/src/components/ui/card.tsx b/tab-filmstrip/src/components/ui/card.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/ui/card.tsx
@@ -0,0 +13 @@
+import * as React from "react";
+export function Card({ className = "", ...props }: React.HTMLAttributes<HTMLDivElement>) {
+  return <div className={"rounded-2xl border bg-white/80 " + className} {...props} />;
+}
+export function CardHeader({ className = "", ...props }: React.HTMLAttributes<HTMLDivElement>) {
+  return <div className={"p-4 " + className} {...props} />;
+}
+export function CardTitle({ className = "", ...props }: React.HTMLAttributes<HTMLDivElement>) {
+  return <h3 className={"font-semibold " + className} {...props} />;
+}
+export function CardContent({ className = "", ...props }: React.HTMLAttributes<HTMLDivElement>) {
+  return <div className={"p-4 " + className} {...props} />;
+}

diff --git a/tab-filmstrip/src/components/ui/button.tsx b/tab-filmstrip/src/components/ui/button.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/ui/button.tsx
@@ -0,0 +13 @@
+import * as React from "react";
+type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {
+  variant?: "default" | "secondary" | "outline" | "ghost";
+  size?: "sm" | "icon" | "md";
+  asChild?: boolean;
+};
+export function Button({ variant = "default", size = "md", className = "", asChild, ...props }: ButtonProps) {
+  const base = "inline-flex items-center justify-center rounded-lg transition";
+  const byVariant = { default: "bg-violet-600 text-white hover:bg-violet-700", secondary: "bg-zinc-100 hover:bg-zinc-200 text-zinc-900", outline: "border border-zinc-300 hover:bg-zinc-100", ghost: "hover:bg-zinc-100", }[variant];
+  const bySize = { sm: "h-8 px-2 text-sm", icon: "h-9 w-9", md: "h-10 px-4" }[size];
+  if (asChild) return <span className={base + " " + byVariant + " " + bySize + " " + className} {...(props as any)} />;
+  return <button className={base + " " + byVariant + " " + bySize + " " + className} {...props} />;
+}

diff --git a/tab-filmstrip/src/components/ui/badge.tsx b/tab-filmstrip/src/components/ui/badge.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/ui/badge.tsx
@@ -0,0 +5 @@
+import * as React from "react";
+export function Badge({ className = "", variant = "default", ...props }: React.HTMLAttributes<HTMLSpanElement> & { variant?: "default" | "secondary" | "outline" }) {
+  const byVariant = { default: "bg-violet-600 text-white", secondary: "bg-zinc-200 text-zinc-900", outline: "border border-zinc-300 text-zinc-800", }[variant];
+  return <span className={"inline-flex items-center rounded-md px-2 py-0.5 text-xs " + byVariant + " " + className} {...props} />;
+}

diff --git a/tab-filmstrip/src/components/ui/separator.tsx b/tab-filmstrip/src/components/ui/separator.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/ui/separator.tsx
@@ -0,0 +5 @@
+import * as React from "react";
+export function Separator({ orientation = "horizontal", className = "", ...props }: React.HTMLAttributes<HTMLDivElement> & { orientation?: "horizontal" | "vertical" }) {
+  const cls = orientation === "vertical" ? "w-px h-6 bg-zinc-300" : "h-px w-full bg-zinc-300";
+  return <div className={cls + " " + className} {...props} />;
+}

diff --git a/tab-filmstrip/src/components/ui/tabs.tsx b/tab-filmstrip/src/components/ui/tabs.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/ui/tabs.tsx
@@ -0,0 +18 @@
+import * as React from "react";
+type TabsContext = { value: string; onValueChange?: (v: string) => void };
+const Ctx = React.createContext<TabsContext>({ value: "" });
+export function Tabs({ value, onValueChange, children }: { value: string; onValueChange?: (v: string) => void; children: React.ReactNode }) {
+  return <Ctx.Provider value={{ value, onValueChange }}>{children}</Ctx.Provider>;
+}
+export function TabsList({ children }: { children: React.ReactNode }) {
+  return <div className="inline-flex gap-2 p-1 rounded-lg bg-zinc-100 border">{children}</div>;
+}
+export function TabsTrigger({ value, children }: { value: string; children: React.ReactNode }) {
+  const ctx = React.useContext(Ctx);
+  const active = ctx.value === value;
+  return (
+    <button className={"px-3 py-1 rounded-md text-sm " + (active ? "bg-white border" : "hover:bg-white/50")} onClick={() => ctx.onValueChange?.(value)}>
+      {children}
+    </button>
+  );
+}

diff --git a/tab-filmstrip/src/components/ui/tooltip.tsx b/tab-filmstrip/src/components/ui/tooltip.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/src/components/ui/tooltip.tsx
@@ -0,0 +5 @@
+import * as React from "react";
+export function TooltipProvider({ children }: { children: React.ReactNode }) { return <>{children}</>; }
+export function Tooltip({ children }: { children: React.ReactNode }) { return <>{children}</>; }
+export function TooltipTrigger({ asChild, children }: { asChild?: boolean; children: React.ReactNode }) { return <>{children}</>; }
+export function TooltipContent({ children }: { children: React.ReactNode }) { return <>{children}</>; }

diff --git a/tab-filmstrip/public/tools/roadmap/RoadmapPrimarySource.html b/tab-filmstrip/public/tools/roadmap/RoadmapPrimarySource.html
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/public/tools/roadmap/RoadmapPrimarySource.html
@@ -0,0 +1 @@
+<div class="card" data-id="5001" data-title="Access SharePoint agents in the M365 Copilot app" data-prod="SharePoint" data-status="Rolling out" data-url="https://example.com/r/5001"><h4><a href="https://example.com/r/5001">Access SharePoint agents in the M365 Copilot app</a></h4><details><summary>desc</summary><div>Roadmap description goes here.</div></details></div>

diff --git a/tab-filmstrip/public/tools/message_center/MessageCenterBriefingSuppliments.html b/tab-filmstrip/public/tools/message_center/MessageCenterBriefingSuppliments.html
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/tab-filmstrip/public/tools/message_center/MessageCenterBriefingSuppliments.html
@@ -0,0 +1 @@
+<div class="card" data-id="MC12345" data-title="SharePoint agents in Copilot app" data-prod="SharePoint" data-impact="Admin" data-cat="Message Center" data-url="https://example.com/mc/12345"><h4><a href="https://example.com/mc/12345">SharePoint agents in Copilot app</a></h4><details><summary>desc</summary><div>Message Center rich details appear here.</div></details></div>
